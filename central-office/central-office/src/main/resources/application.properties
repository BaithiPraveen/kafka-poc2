# Kafka server
spring.kafka.bootstrap-servers=localhost:9092

# Consumer group
spring.kafka.consumer.group-id=central-group

# Use ErrorHandlingDeserializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


# Delegate to JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Fully qualified DTO class name (if known and shared between apps)
spring.kafka.consumer.properties.spring.json.value.default.type=pbaithi.poc.central.dto.TransactionDTO

# Allow trusted packages
#spring.kafka.consumer.properties.spring.json.trusted.packages=pbaithi.poc.central.dto
spring.kafka.consumer.properties.spring.json.trusted.packages=*






#spring.application.name=central-office
server.port=8081

spring.datasource.url=jdbc:mysql://localhost:3306/maindb
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=central-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
